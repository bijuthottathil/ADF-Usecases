{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfdevbijuthottathil"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"LS_AzureSQLSourcetables_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AzureSQLSourcetables'"
		},
		"lnk_destinationjsontransformed_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lnk_destinationjsontransformed'"
		},
		"lnkjsondatasource_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lnkjsondatasource'"
		},
		"LS_AzureSQLSourcetables_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "portfolio-db.database.windows.net"
		},
		"LS_AzureSQLSourcetables_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "portfolio-db"
		},
		"LS_AzureSQLSourcetables_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"lnk_destinationjsontransformed_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsusecasesstore.dfs.core.windows.net/"
		},
		"lnkjsondatasource_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsusecasesstore.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSQLSourcetables')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_AzureSQLSourcetables_properties_typeProperties_server')]",
					"database": "[parameters('LS_AzureSQLSourcetables_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_AzureSQLSourcetables_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AzureSQLSourcetables_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnk_destinationjsontransformed')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lnk_destinationjsontransformed_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lnk_destinationjsontransformed_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnkjsondatasource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lnkjsondatasource_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lnkjsondatasource_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASql_datasetsource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSQLSourcetables",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					},
					"db": {
						"type": "string",
						"defaultValue": "dbo"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().db",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSQLSourcetables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASql_datasourcetooutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSQLSourcetables",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSQLSourcetables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_jsonsource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkjsondatasource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "nestedarray.json",
						"folderPath": "source",
						"fileSystem": "json"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"category": {
							"type": "string"
						},
						"price": {
							"type": "number"
						},
						"rating": {
							"type": "number"
						},
						"inStock": {
							"type": "boolean"
						},
						"features": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkjsondatasource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsblobfortables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "tableoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsjsontransformedtocsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_destinationjsontransformed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_destinationjsontransformed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TablesCopyPipeLine')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\nSELECT *\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_NAME in ( 'Customer','Product')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ASql_datasetsource",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "activity('LookupTables').output.value",
										"type": "Expression"
									},
									"db": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Foreachtable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupTables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ASql_datasourcetooutput",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"schema": {
													"value": "@item().table_schema",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsblobfortables",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@concat(item().table_name,'.','csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"table": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ASql_datasetsource')]",
				"[concat(variables('factoryId'), '/datasets/ASql_datasourcetooutput')]",
				"[concat(variables('factoryId'), '/datasets/dsblobfortables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_json_transpose')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_jsonsource",
								"type": "DatasetReference"
							},
							"name": "jsonsourcefiles"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsjsontransformedtocsv",
								"type": "DatasetReference"
							},
							"name": "copyingtocsvfiles"
						}
					],
					"transformations": [
						{
							"name": "flattenjsonfile"
						}
					],
					"scriptLines": [
						"parameters{",
						"     fileDate as string (concat(\"Biju\",\"raj\"))",
						"}",
						"source(output(",
						"          id as string,",
						"          name as string,",
						"          category as string,",
						"          price as double,",
						"          rating as double,",
						"          inStock as boolean,",
						"          features as string[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'arrayOfDocuments') ~> jsonsourcefiles",
						"jsonsourcefiles foldDown(unroll(features),",
						"     mapColumn(",
						"          id,",
						"          name,",
						"          category,",
						"          price,",
						"          rating,",
						"          inStock,",
						"          features",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flattenjsonfile",
						"flattenjsonfile sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> copyingtocsvfiles"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_jsonsource')]",
				"[concat(variables('factoryId'), '/datasets/dsjsontransformedtocsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy nested json to csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_json_to_csv",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_json_transpose",
								"type": "DataFlowReference",
								"parameters": {
									"fileDate": "concat(\"Biju\",\"raj\")"
								},
								"datasetParameters": {
									"jsonsourcefiles": {},
									"copyingtocsvfiles": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_json_transpose')]"
			]
		}
	]
}