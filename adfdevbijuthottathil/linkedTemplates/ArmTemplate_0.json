{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfdevbijuthottathil"
		},
		"lnk_destinationjsontransformed_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lnk_destinationjsontransformed'"
		},
		"lnkjsondatasource_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lnkjsondatasource'"
		},
		"lnk_destinationjsontransformed_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsusecasesstore.dfs.core.windows.net/"
		},
		"lnkjsondatasource_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsusecasesstore.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/lnk_destinationjsontransformed')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lnk_destinationjsontransformed_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lnk_destinationjsontransformed_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnkjsondatasource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lnkjsondatasource_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lnkjsondatasource_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_jsonsource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkjsondatasource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test.json",
						"folderPath": "source",
						"fileSystem": "json"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string"
						},
						"average_rating": {
							"type": "string"
						},
						"category": {
							"type": "string"
						},
						"crawled_at": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"dislikes": {
							"type": "string"
						},
						"images": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"likes": {
							"type": "string"
						},
						"location": {
							"type": "string"
						},
						"price": {
							"type": "string"
						},
						"product": {
							"type": "string"
						},
						"rating": {
							"type": "string"
						},
						"review_title": {
							"type": "string"
						},
						"review_uniq_id": {
							"type": "string"
						},
						"reviewed_at": {
							"type": "string"
						},
						"reviewed_by": {
							"type": "string"
						},
						"url": {
							"type": "string"
						},
						"verified_purchase": {
							"type": "boolean"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkjsondatasource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsjsontransformedtocsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_destinationjsontransformed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "destination",
						"fileSystem": "json"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_destinationjsontransformed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']"
										},
										"sink": {
											"name": "_id"
										}
									},
									{
										"source": {
											"path": "$['average_rating']"
										},
										"sink": {
											"name": "average_rating"
										}
									},
									{
										"source": {
											"path": "$['category']"
										},
										"sink": {
											"name": "category"
										}
									},
									{
										"source": {
											"path": "$['crawled_at']"
										},
										"sink": {
											"name": "crawled_at"
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"name": "description"
										}
									},
									{
										"source": {
											"path": "$['dislikes']"
										},
										"sink": {
											"name": "dislikes"
										}
									},
									{
										"source": {
											"path": "$['images'][0]"
										},
										"sink": {
											"name": "items"
										}
									},
									{
										"source": {
											"path": "$['likes']"
										},
										"sink": {
											"name": "likes"
										}
									},
									{
										"source": {
											"path": "$['location']"
										},
										"sink": {
											"name": "location"
										}
									},
									{
										"source": {
											"path": "$['price']"
										},
										"sink": {
											"name": "price"
										}
									},
									{
										"source": {
											"path": "$['product']"
										},
										"sink": {
											"name": "product"
										}
									},
									{
										"source": {
											"path": "$['rating']"
										},
										"sink": {
											"name": "rating"
										}
									},
									{
										"source": {
											"path": "$['review_title']"
										},
										"sink": {
											"name": "review_title"
										}
									},
									{
										"source": {
											"path": "$['review_uniq_id']"
										},
										"sink": {
											"name": "review_uniq_id"
										}
									},
									{
										"source": {
											"path": "$['reviewed_at']"
										},
										"sink": {
											"name": "reviewed_at"
										}
									},
									{
										"source": {
											"path": "$['reviewed_by']"
										},
										"sink": {
											"name": "reviewed_by"
										}
									},
									{
										"source": {
											"path": "$['url']"
										},
										"sink": {
											"name": "url"
										}
									},
									{
										"source": {
											"path": "$['verified_purchase']"
										},
										"sink": {
											"name": "verified_purchase"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_jsonsource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsjsontransformedtocsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_jsonsource')]",
				"[concat(variables('factoryId'), '/datasets/dsjsontransformedtocsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_json_transpose')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_jsonsource",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsjsontransformedtocsv",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {_id} as string,",
						"          average_rating as string,",
						"          category as string,",
						"          crawled_at as string,",
						"          description as string,",
						"          dislikes as string,",
						"          images as string[],",
						"          likes as string,",
						"          location as string,",
						"          price as string,",
						"          product as string,",
						"          rating as string,",
						"          review_title as string,",
						"          review_uniq_id as string,",
						"          reviewed_at as string,",
						"          reviewed_by as string,",
						"          url as string,",
						"          verified_purchase as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> source1",
						"source1 foldDown(unroll(images, images),",
						"     mapColumn(",
						"          {_id},",
						"          average_rating,",
						"          category,",
						"          crawled_at,",
						"          description,",
						"          dislikes,",
						"          images,",
						"          likes,",
						"          location,",
						"          price,",
						"          product,",
						"          rating,",
						"          review_title,",
						"          review_uniq_id,",
						"          reviewed_at,",
						"          reviewed_by,",
						"          url,",
						"          verified_purchase",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_jsonsource')]",
				"[concat(variables('factoryId'), '/datasets/dsjsontransformedtocsv')]"
			]
		}
	]
}