{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfdevbijuthottathil"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"LS_AzureSQLSourcetables_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AzureSQLSourcetables'"
		},
		"lnk_destinationjsontransformed_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lnk_destinationjsontransformed'"
		},
		"lnkjsondatasource_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lnkjsondatasource'"
		},
		"lnkMySqlonpremsource_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'lnkMySqlonpremsource'"
		},
		"lnkPostgreSqlAzure_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'lnkPostgreSqlAzure'"
		},
		"LS_AzureSQLSourcetables_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "portfolio-db.database.windows.net"
		},
		"LS_AzureSQLSourcetables_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "portfolio-db"
		},
		"LS_AzureSQLSourcetables_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"lnk_destinationjsontransformed_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsusecasesstore.dfs.core.windows.net/"
		},
		"lnkjsondatasource_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsusecasesstore.dfs.core.windows.net/"
		},
		"lnkMySqlonpremsource_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"lnkMySqlonpremsource_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "mysqldb"
		},
		"lnkMySqlonpremsource_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "biju"
		},
		"lnkPostgreSqlAzure_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "postgresserver-migration.postgres.database.azure.com"
		},
		"lnkPostgreSqlAzure_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "postgres"
		},
		"lnkPostgreSqlAzure_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "bijupostgres"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSQLSourcetables')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_AzureSQLSourcetables_properties_typeProperties_server')]",
					"database": "[parameters('LS_AzureSQLSourcetables_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_AzureSQLSourcetables_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AzureSQLSourcetables_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnk_destinationjsontransformed')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lnk_destinationjsontransformed_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lnk_destinationjsontransformed_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnkjsondatasource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lnkjsondatasource_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lnkjsondatasource_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/migrationIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"selfContainedInteractiveAuthoringEnabled": false
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASql_datasetsource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSQLSourcetables",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					},
					"db": {
						"type": "string",
						"defaultValue": "dbo"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().db",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSQLSourcetables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASql_datasourcetooutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSQLSourcetables",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSQLSourcetables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_jsonsource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkjsondatasource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "nestedarray.json",
						"folderPath": "source",
						"fileSystem": "json"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"category": {
							"type": "string"
						},
						"price": {
							"type": "number"
						},
						"rating": {
							"type": "number"
						},
						"inStock": {
							"type": "boolean"
						},
						"features": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkjsondatasource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsblobfortables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "tableoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsjsontransformedtocsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_destinationjsontransformed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_destinationjsontransformed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnkMySqlonpremsource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('lnkMySqlonpremsource_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('lnkMySqlonpremsource_properties_typeProperties_database')]",
					"username": "[parameters('lnkMySqlonpremsource_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('lnkMySqlonpremsource_password')]"
					},
					"driverVersion": "v2"
				},
				"connectVia": {
					"referenceName": "migrationIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/migrationIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnkPostgreSqlAzure')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"version": "2.0",
				"typeProperties": {
					"server": "[parameters('lnkPostgreSqlAzure_properties_typeProperties_server')]",
					"port": 5432,
					"database": "[parameters('lnkPostgreSqlAzure_properties_typeProperties_database')]",
					"sslMode": 2,
					"username": "[parameters('lnkPostgreSqlAzure_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('lnkPostgreSqlAzure_password')]"
					},
					"authenticationType": "Basic"
				},
				"connectVia": {
					"referenceName": "migrationIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/migrationIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TablesCopyPipeLine')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\nSELECT *\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_NAME in ( 'Customer','Product')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ASql_datasetsource",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "activity('LookupTables').output.value",
										"type": "Expression"
									},
									"db": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Foreachtable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupTables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ASql_datasourcetooutput",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().table_name",
													"type": "Expression"
												},
												"schema": {
													"value": "@item().table_schema",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsblobfortables",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@concat(item().table_name,'.','csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"table": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ASql_datasetsource')]",
				"[concat(variables('factoryId'), '/datasets/ASql_datasourcetooutput')]",
				"[concat(variables('factoryId'), '/datasets/dsblobfortables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsMySqlonpremsource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkMySqlonpremsource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`inventory`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkMySqlonpremsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsmysqlsourceinventorymaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkMySqlonpremsource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`inventory_master`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkMySqlonpremsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsmysqlwatermarktable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkMySqlonpremsource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`watermarktable`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkMySqlonpremsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dspostgresazure')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkPostgreSqlAzure",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "item_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "product_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "category",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "quantity",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "price",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "last_updated",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "inventory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkPostgreSqlAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dspostgresstagingtable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkPostgreSqlAzure",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "item_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "product_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "category",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "quantity",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "price",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "last_updated",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "inventory_staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkPostgreSqlAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dspostgrestagingazure')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkPostgreSqlAzure",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "item_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "product_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "category",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "quantity",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "price",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "last_updated",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "inventory_staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkPostgreSqlAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsprogressqlinventorymaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnkPostgreSqlAzure",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "item_id",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "product_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "category",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "quantity",
						"type": "integer",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "price",
						"type": "numeric",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "last_updated",
						"type": "timestamp without time zone",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "inventory_master"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnkPostgreSqlAzure')]"
			]
		}
	]
}