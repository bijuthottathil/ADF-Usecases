{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfdevbijuthottathil"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/df_json_transpose')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_jsonsource",
								"type": "DatasetReference"
							},
							"name": "jsonsourcefiles"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsjsontransformedtocsv",
								"type": "DatasetReference"
							},
							"name": "copyingtocsvfiles"
						}
					],
					"transformations": [
						{
							"name": "flattenjsonfile"
						}
					],
					"scriptLines": [
						"parameters{",
						"     fileDate as string (concat(\"Biju\",\"raj\"))",
						"}",
						"source(output(",
						"          id as string,",
						"          name as string,",
						"          category as string,",
						"          price as double,",
						"          rating as double,",
						"          inStock as boolean,",
						"          features as string[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'arrayOfDocuments') ~> jsonsourcefiles",
						"jsonsourcefiles foldDown(unroll(features),",
						"     mapColumn(",
						"          id,",
						"          name,",
						"          category,",
						"          price,",
						"          rating,",
						"          inStock,",
						"          features",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flattenjsonfile",
						"flattenjsonfile sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> copyingtocsvfiles"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy nested json to csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_json_to_csv",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_json_transpose",
								"type": "DataFlowReference",
								"parameters": {
									"fileDate": "concat(\"Biju\",\"raj\")"
								},
								"datasetParameters": {
									"jsonsourcefiles": {},
									"copyingtocsvfiles": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_json_transpose')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Inventory_Incremental_Upsert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyinventorystagingtable",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupOldWatermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT\n    item_id,\n    product_name,\n    category,\n    quantity,\n    price,\n    last_updated\nFROM\n    inventory\nWHERE\n    last_updated > CURDATE() - INTERVAL 1 DAY\nORDER BY last_updated ASC;\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzurePostgreSqlSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": "truncate table inventory_staging ",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "item_id",
											"type": "Int32",
											"physicalType": "Int32"
										},
										"sink": {
											"name": "item_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "product_name",
											"type": "String",
											"physicalType": "VarChar"
										},
										"sink": {
											"name": "product_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "VarChar"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "quantity",
											"type": "Int32",
											"physicalType": "Int32"
										},
										"sink": {
											"name": "quantity",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "NewDecimal"
										},
										"sink": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "last_updated",
											"type": "DateTime",
											"physicalType": "Timestamp"
										},
										"sink": {
											"name": "last_updated",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dsMySqlonpremsource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dspostgrestagingazure",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LookupOldWatermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "SELECT watermarkvalue FROM public.watermarktable WHERE tablename = 'inventory';",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "dspostgresazure",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy incrimental data to finaltable",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "copyinventorystagingtable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzurePostgreSqlSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"preCopyScript": "INSERT INTO public.inventory (item_id, product_name, category, quantity, price, last_updated)\nSELECT\n    stg.item_id,\n    stg.product_name,\n    stg.category,\n    stg.quantity,\n    stg.price,\n    stg.last_updated\nFROM\n    public.inventory_staging AS stg\nON CONFLICT (item_id) DO UPDATE SET \n    product_name = EXCLUDED.product_name,\n    category = EXCLUDED.category,\n    quantity = EXCLUDED.quantity,\n    price = EXCLUDED.price,\n    last_updated = EXCLUDED.last_updated;\n\n\nTRUNCATE TABLE public.inventory_staging;\nupdate public.watermarktable set watermarkvalue=NOW()\n",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dspostgresstagingtable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dspostgrestagingazure",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mysqlincrimentcopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "mysqlincrimentcopypipeline",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "current_max_watermark_value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": {
									"value": "SELECT * FROM inventory_master\nWHERE last_updated > '@{activity('last_watermark_value').output.firstRow.WatermarkValue}'\n  AND last_updated <='@{activity('current_max_watermark_value').output.firstRow.NewWatermarkValue}';\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzurePostgreSqlSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "item_id",
											"type": "Int32",
											"physicalType": "Int32"
										},
										"sink": {
											"name": "item_id",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "product_name",
											"type": "String",
											"physicalType": "VarChar"
										},
										"sink": {
											"name": "product_name",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "VarChar"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "character varying"
										}
									},
									{
										"source": {
											"name": "quantity",
											"type": "Int32",
											"physicalType": "Int32"
										},
										"sink": {
											"name": "quantity",
											"type": "Int32",
											"physicalType": "integer"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "NewDecimal"
										},
										"sink": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "numeric"
										}
									},
									{
										"source": {
											"name": "last_updated",
											"type": "DateTime",
											"physicalType": "DateTime"
										},
										"sink": {
											"name": "last_updated",
											"type": "DateTime",
											"physicalType": "timestamp without time zone"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dsmysqlsourceinventorymaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsprogressqlinventorymaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "current_max_watermark_value",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "last_watermark_value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": "SELECT MAX(last_updated) AS NewWatermarkValue FROM inventory_master;"
							},
							"dataset": {
								"referenceName": "dsmysqlwatermarktable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "last_watermark_value",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": "SELECT watermarkvalue FROM watermarktable WHERE TableName = 'inventory_master';"
							},
							"dataset": {
								"referenceName": "dsmysqlwatermarktable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}