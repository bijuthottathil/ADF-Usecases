{
	"name": "Copy_Inventory_Incremental_Upsert",
	"properties": {
		"activities": [
			{
				"name": "copyinventorystagingtable",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupOldWatermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "MySqlSource",
						"query": {
							"value": "SELECT\n    item_id,\n    product_name,\n    category,\n    quantity,\n    price,\n    last_updated\nFROM\n    inventory\n    last_updated > '@{activity('LookupOldWatermark').output.firstRow.watermarkvalue}'\nORDER BY last_updated ASC;\n",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzurePostgreSqlSink",
						"writeBatchSize": 1000000,
						"writeBatchTimeout": "00:30:00",
						"preCopyScript": "truncate table inventory_staging ",
						"writeMethod": "CopyCommand"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "item_id",
									"type": "Int32",
									"physicalType": "Int32"
								},
								"sink": {
									"name": "item_id",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "product_name",
									"type": "String",
									"physicalType": "VarChar"
								},
								"sink": {
									"name": "product_name",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "category",
									"type": "String",
									"physicalType": "VarChar"
								},
								"sink": {
									"name": "category",
									"type": "String",
									"physicalType": "character varying"
								}
							},
							{
								"source": {
									"name": "quantity",
									"type": "Int32",
									"physicalType": "Int32"
								},
								"sink": {
									"name": "quantity",
									"type": "Int32",
									"physicalType": "integer"
								}
							},
							{
								"source": {
									"name": "price",
									"type": "Decimal",
									"physicalType": "NewDecimal"
								},
								"sink": {
									"name": "price",
									"type": "Decimal",
									"physicalType": "numeric"
								}
							},
							{
								"source": {
									"name": "last_updated",
									"type": "DateTime",
									"physicalType": "Timestamp"
								},
								"sink": {
									"name": "last_updated",
									"type": "DateTime",
									"physicalType": "timestamp without time zone"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "dsMySqlonpremsource",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "dspostgrestagingazure",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "LookupOldWatermark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": "SELECT watermarkvalue FROM public.watermarktable WHERE tablename = 'inventory';",
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "dspostgresazure",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Wait1",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "copyinventorystagingtable",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			}
		],
		"annotations": []
	}
}